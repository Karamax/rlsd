#!/bin/loksh

# set the executable search path
export PATH="/bin"

# clear the screen from boot loader or early kernel messages
clear

# mount virtual file systems
echo -n "Mounting virtual file systems ..."

mount -t proc proc /proc
mount -t sysfs sys /sys
mount -t devtmpfs dev /dev
mount -t tmpfs run /run
mount -t tmpfs -o mode=600,size=25% log /var/log

# read the kernel command-line
home=""
for i in $(cat /proc/cmdline)
do
	case "$i" in
		home=*)
			home="${i#*=}"
			;;
		sleep=*)
			interval="${i#*=}"
			echo -n " done.
Waiting for $interval seconds ..."
			sleep $interval
			;;
	esac
done

# start logging daemons
echo -n " done.
Starting logging services ..."

syslogd /run/messages
logd /run/messages /var/log/messages
logd /proc/kmsg /var/log/kern.log

# turn off kernel messages
klogecho off

# find the home partition
echo -n " done.
Searching for the home partition ..."
cd /sys/class/block
is_found=0
for i in 1 2 3 4 5
do
	for partition in *
	do
		mount -o ro /dev/$partition /mnt/home
		if [ 0 -eq $? ]
		then
			if [ -f /mnt/home/bzImage ] && \
			   [ -f /mnt/home/initrd.xz ] && \
			   [ -f /mnt/home/rootfs.sfs ]
			then
				is_found=1
				break
			fi
		fi
		umount /mnt/home
	done
	[ 1 -eq $is_found ] && break
	sleep 5
done
if [ 0 -eq $is_found ]
then
	echo "failure."
	exit
fi

# mount the root file system image
echo -n " done.
Mounting the root file system ..."
mount -t squasfs -o loop,ro /mnt/home/rootfs.sfs /mnt/ro

# mount a writable file system
echo -n " done.
Setting up a writable system ..."
if [ -n "$home" ]
then
	mount "/dev/$home" /mnt/rw
else
	mount -t tmpfs save /mnt/rw
fi

# mount a layered file system
echo -n " done.
Setting up a layered file system ..."

luufs /mnt/union

# bind the existing virtual file system and mount additional ones
echo -n " done.
Mounting additional virtual file systems ..."

mount -B /proc /mnt/union/proc
mount -B /sys /mnt/union/sys
mount -B /dev /mnt/union/dev
mount -B /run /mnt/union/run
mount -B /mnt/union/run /mnt/union/var/run
mount -B /var/log /mnt/union/var/log
mount -t tmpfs -o mode=777,noexec,nosuid,nodev,size=25% tmp /mnt/union/tmp

mkdir /run/shm
mount -B /run/shm /mnt/union/dev/shm
mkdir /mnt/union/dev/pts
mount -t devpts -o mode=620 pts /mnt/union/dev/pts

# bind /var/cache to the writeable layer, to bypass limitations in FUSE and
# luufs which affect fc-cache
mkdir /mnt/rw/var
mkdir /mnt/rw/var/cache
mount -B /mnt/rw/var/cache /mnt/union/var/cache

echo " done."

# continue the boot process inside the layered file system
exec /mnt/ro/bin/chroot /mnt/union /bin/post_init
