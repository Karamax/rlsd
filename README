 _
| |    __ _ _____   _ _   ___  __
| |   / _` |_  / | | | | | \ \/ /
| |__| (_| |/ /| |_| | |_| |>  <
|_____\__,_/___|\__, |\__,_/_/\_\
                |___/

Lazyux is an ultra-minimalistic, no-frills, graphical, embedded-like
distribution of Linux-libre (http://linux-libre.fsfla.org/) in development.

About Lazyux
============

Features:
  - Small and extremely lightweight, yet graphical
  - Statically-linked
  - Built automatically and quickly
  - Familiar: Unix-like and written in C
  - Permissively-licensed

Core components:
  - Linux-libre (http://linux-libre.fsfla.org/)
  - musl (http://www.musl-libc.org/)
  - lazy-utils (http://dimakrasner.com/lazy_utils.html)
  - loksh (http://dimakrasner.com/loksh.html)
  - tinyxlib (https://github.com/iguleder/tinyxlib)
  - tinyxserver (https://github.com/iguleder/tinyxserver)
  - Ratpoison (http://www.nongnu.org/ratpoison/)
  - GTK+ (http://www.gtk.org/)

Current status:
  - Builds flawlessly on Debian 7 (http://www.debian.org/)
  - Boots under x86 (MBR) and x86_64 (UEFI); reaches a graphical desktop
  - Lacks network tools (i.e route, ifconfig), WiFi support and a firewall
  - Lacks a persistent root file system
  - Some applications crash

Building Lazyux
===============

Although Lazyux can be built using any Linux distribution, it is actively tested
and developed against Debian 7 (Wheezy).

The following packages are required in order to build Lazyux in a clean Debian
environment:
  - git and unzip, to build lazy-utils
  - flex and bison, to build UnNetHack
  - nasm, to build libjpeg-turbo
  - fontforge and libfont-ttf-perl, to build the DejaVu fonts

Once the required packages are installed, build a bootable Lazyux image using
the scripts:
  sh build_all.sh
  sh create_iso.sh

Credits and Legal Information
=============================

While the packages and patches included in Lazyux are licensed under various
licenses, Lazyux itself is licensed under a 2-clause BSD license, see COPYING
for the license text. For a list of its authors and contributors, see AUTHORS
and THANKS.

The ASCII art logo at the top was made using FIGlet (http://www.figlet.org/).