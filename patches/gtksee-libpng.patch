diff -rup gtksee-0.6.0b-1-orig/src/detect.c gtksee-0.6.0b-1/src/detect.c
--- gtksee-0.6.0b-1-orig/src/detect.c	2014-01-11 14:35:41.200159213 +0000
+++ gtksee-0.6.0b-1/src/detect.c	2014-01-11 14:36:00.000159515 +0000
@@ -123,14 +123,16 @@ static gboolean
 detect_png(guchar *filename, ImageInfo *info)
 {
 #ifdef HAVE_LIBPNG
-   png_info pnginfo;
+   gint width;
+   gint height;
+   png_byte color_type;
 
-   if (png_get_header(filename, &pnginfo))
+   if (png_get_header(filename, &width, &height, &color_type))
    {
       info->type = PNG;
-      info->width = pnginfo.width;
-      info->height = pnginfo.height;
-      switch (pnginfo.color_type)
+      info->width = width;
+      info->height = height;
+      switch (color_type)
       {
          case PNG_COLOR_TYPE_RGB :
             info->ncolors = 24;
diff -rup gtksee-0.6.0b-1-orig/src/im_png.c gtksee-0.6.0b-1/src/im_png.c
--- gtksee-0.6.0b-1-orig/src/im_png.c	2014-01-11 14:35:41.200159213 +0000
+++ gtksee-0.6.0b-1/src/im_png.c	2014-01-11 14:36:00.000159515 +0000
@@ -55,7 +55,7 @@ my_error_exit(png_struct *pp, guchar *w)
  */
 
 gboolean
-png_get_header(gchar *filename, png_info *info)
+png_get_header(gchar *filename, gint *width, gint *height, png_bytep color_type)
 {
    png_struct  *pp;
    png_info    *linfo;
@@ -99,10 +99,9 @@ png_get_header(gchar *filename, png_info
    png_init_io(pp, fp);
    png_read_info(pp, linfo);
 
-   info->width       = linfo->width;
-   info->height      = linfo->height;
-   info->valid       = linfo->valid;
-   info->color_type  = linfo->color_type;
+   *width       = png_get_image_width(pp, linfo);
+   *height      = png_get_image_height(pp, linfo);
+   *color_type  = png_get_color_type(pp, linfo);
 
    g_free(linfo);
    g_free(pp);
@@ -161,26 +160,30 @@ png_load(gchar *filename, PngLoadFunc fu
    png_init_io(pp, fp);
    png_read_info(pp, info);
 
-   if (info->bit_depth < 8)
+   if (png_get_bit_depth(pp, info) < 8)
    {
       png_set_packing(pp);
       png_set_expand(pp);
 
-      if (info->valid & PNG_INFO_sBIT)
-         png_set_shift(pp, &(info->sig_bit));
+      if (png_get_valid(pp, info, PNG_INFO_sBIT)) {
+         png_color_8p sig_bit;
+         png_get_sBIT(pp, info, &sig_bit);
+
+         png_set_shift(pp, sig_bit);
+      }
    } else
-   if (info->bit_depth == 16)
+   if (png_get_bit_depth(pp, info) == 16)
       png_set_strip_16(pp);
 
    /*
     * Turn on interlace handling...
     */
-   if (info->interlace_type)
+   if (png_get_interlace_type(pp, info))
       num_passes = png_set_interlace_handling(pp);
    else
       num_passes = 1;
 
-   switch (info->color_type)
+   switch (png_get_color_type(pp, info))
    {
       case PNG_COLOR_TYPE_RGB :           /* RGB */
          bpp = 3;
@@ -195,22 +198,30 @@ png_load(gchar *filename, PngLoadFunc fu
          bpp = 2;
          break;
       case PNG_COLOR_TYPE_PALETTE :       /* Indexed */
-         bpp = info->num_trans ? 4:3;
+         {
+           png_bytep trans_alpha;
+           int num_trans;
+           png_color_16p trans_color;
+
+           png_get_tRNS(pp, info, &trans_alpha, &num_trans, &trans_color);
+
+           bpp = num_trans ? 4:3;
+         }
          break;
    };
 
-   pixel = g_malloc(sizeof(guchar) * info->width * bpp);
+   pixel = g_malloc(sizeof(guchar) * png_get_image_width(pp, info) * bpp);
 
    for (pass = 0; pass < num_passes; pass++)
    {
-      for (scanline = 0; scanline < info->height; scanline++)
+      for (scanline = 0; scanline < png_get_image_height(pp, info); scanline++)
       {
-         if (info->color_type == PNG_COLOR_TYPE_PALETTE)
+         if (png_get_color_type(pp, info) == PNG_COLOR_TYPE_PALETTE)
             png_set_expand(pp);
 
             png_read_row(pp, pixel, NULL);
 
-         if ((*func) (pixel, info->width, 0, scanline, bpp, -1, 0)) goto png_read_cancelled;
+         if ((*func) (pixel, png_get_image_width(pp, info), 0, scanline, bpp, -1, 0)) goto png_read_cancelled;
       };
    };
 
diff -rup gtksee-0.6.0b-1-orig/src/im_png.h gtksee-0.6.0b-1/src/im_png.h
--- gtksee-0.6.0b-1-orig/src/im_png.h	2014-01-11 14:35:41.200159213 +0000
+++ gtksee-0.6.0b-1/src/im_png.h	2014-01-11 14:36:00.000159515 +0000
@@ -31,7 +31,7 @@
 
 typedef	gboolean	(*PngLoadFunc)		(guchar *buffer, gint width, gint left, gint scanline, gint components, gint pass, gint mode);
 
-gboolean	png_get_header		(gchar *filename, png_info *info);
+gboolean	png_get_header		(gchar *filename, gint *, gint *, png_bytep);
 gboolean	png_load		(gchar *filename, PngLoadFunc func);
 
 #endif /* HAVE_LIBPNG */
diff -rup gtksee-0.6.0b-1-orig/src/savefile.c gtksee-0.6.0b-1/src/savefile.c
--- gtksee-0.6.0b-1-orig/src/savefile.c	2014-01-11 14:35:41.200159213 +0000
+++ gtksee-0.6.0b-1/src/savefile.c	2014-01-11 14:36:39.008160148 +0000
@@ -187,7 +187,7 @@ save2png(gchar *filename)
       return;
    }
 
-   if (setjmp(png_ptr->jmpbuf))
+   if (png_jmpbuf(png_ptr))
    {
       fclose(fp);
       png_destroy_write_struct(&png_ptr,  (png_infopp)NULL);
